# Default values for sync-to-gcp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

command: |-
  ./sync-to-gcp --path=./test/test.txt --bucket=test-bucket-1234

# used to mount a gcp service account json key to the pod
gcp_credentials:
  # where the mount the gcp service account json key in the pod
  mount_path: /credentials
  key_file_name: account.json

  # used for static service account json file mounted as a k8s secret
  k8s_secret_service_account_json: ""

  # if vault is available with approle auth method and roleset integration to gcp
  # will dynamically mount and rotate service account json file to the pod
  vault:
    enable_vault_agent: true
    secret: "a-k8s-secret" # should have role_id="a-vault-role-id" secret_id="a-vault-secret-id" in the secret data
    vault_addr: https://vault.company.com
    mount_path: auth/approle
    vault_namespace: ""    # if using a vault namespace
    secret_endpoint: /gcp/key/a-gcp-roleset

image:
  repository: ghcr.io/ammilam/sync-to-gcp
  pullPolicy: IfNotPresent
  tag: latest

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
